import { Text } from '@voiceflow/base-types';
import * as Slate from 'slate';
import { isLinkElement, isVariableElement } from '../guards.mjs';
const serializeTextNode = (node) => {
    const isItalic = node[Text.TextProperty.ITALIC];
    const isUnderline = node[Text.TextProperty.UNDERLINE];
    const isStrikeThrough = node[Text.TextProperty.STRIKE_THROUGH];
    const fontWeight = node[Text.TextProperty.FONT_WEIGHT];
    let { text } = node;
    if (!text.trim())
        return text;
    // Extract leading and trailing whitespaces
    const leadingWhitespace = text.match(/^\s+/) || '';
    const trailingWhitespace = text.match(/\s+$/) || '';
    // Trim the text to remove leading and trailing whitespaces
    text = text.trim();
    if (isItalic)
        text = `*${text}*`;
    if (isUnderline)
        text = `<u>${text}</u>`;
    if (isStrikeThrough)
        text = `~~${text}~~`;
    if (fontWeight)
        text = `**${text}**`;
    // Add the leading and trailing whitespaces back to the outside of the markers
    return `${leadingWhitespace}${text}${trailingWhitespace}`;
};
const serializeLinkElement = (node) => {
    var _a;
    const children = node.children.map(serializeNodeFactory());
    return `[${children}](${(_a = node.url) === null || _a === void 0 ? void 0 : _a.replace(/\s+/g, '')})`;
};
const serializeVariableElement = (node) => `{${node.name}}`;
const serializeElementNode = (node) => {
    if (isLinkElement(node))
        return serializeLinkElement(node);
    if (isVariableElement(node))
        return serializeVariableElement(node);
    return node.children.map(serializeNodeFactory()).join('');
};
const serializeNodeFactory = () => (node) => 
// eslint-disable-next-line no-nested-ternary
Slate.Text.isText(node) ? serializeTextNode(node) : Slate.Element.isElement(node) ? serializeElementNode(node) : '';
export const serializeToMarkdown = (content) => content
    .map(serializeNodeFactory())
    .join('\n')
    .replace(/\n{3,}/g, (match) => `\n${'<br/>'.repeat(match.length - 2)}\n\n`);
//# sourceMappingURL=markdown.mjs.map