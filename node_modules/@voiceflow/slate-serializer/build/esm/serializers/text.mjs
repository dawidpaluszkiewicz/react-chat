import * as Slate from 'slate';
import { isLinkElement, isVariableElement } from '../guards.mjs';
const nodeToString = (node, options) => {
    if (!Slate.Element.isElement(node))
        return Slate.Node.string(node);
    if (isLinkElement(node) && options.markdownLinks)
        return `[${serializeToText(node.children)}](${node.url})`;
    if (isVariableElement(node) && options.encodeVariables)
        return `{${node.name}}`;
    return nodesToString(node.children, options).join('');
};
const nodesToString = (nodes, options) => nodes.map((node) => nodeToString(node, options));
export const serializeToText = (content, { encodeVariables = true, markdownLinks = false } = {}) => nodesToString(content, { encodeVariables, markdownLinks }).join('\n').trim();
//# sourceMappingURL=text.mjs.map