"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _Synchronous_alg, _Synchronous_key;
Object.defineProperty(exports, "__esModule", { value: true });
const enc_utf8_1 = __importDefault(require("crypto-js/enc-utf8"));
class Synchronous {
    constructor({ alg, key }) {
        _Synchronous_alg.set(this, void 0);
        _Synchronous_key.set(this, void 0);
        __classPrivateFieldSet(this, _Synchronous_alg, alg, "f");
        __classPrivateFieldSet(this, _Synchronous_key, key, "f");
    }
    getKey() {
        return __classPrivateFieldGet(this, _Synchronous_key, "f");
    }
    encrypt(data, key = __classPrivateFieldGet(this, _Synchronous_key, "f")) {
        return __classPrivateFieldGet(this, _Synchronous_alg, "f").encrypt(data, key).toString();
    }
    encryptJSON(data) {
        return this.encrypt(JSON.stringify(data));
    }
    decrypt(data, key = __classPrivateFieldGet(this, _Synchronous_key, "f")) {
        return __classPrivateFieldGet(this, _Synchronous_alg, "f").decrypt(data, key).toString(enc_utf8_1.default);
    }
    decryptJSON(data) {
        return JSON.parse(this.decrypt(data));
    }
}
_Synchronous_alg = new WeakMap(), _Synchronous_key = new WeakMap();
exports.default = Synchronous;
//# sourceMappingURL=synchronous.js.map