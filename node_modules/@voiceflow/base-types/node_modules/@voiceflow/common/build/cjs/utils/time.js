"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAbbrevatedFormat = exports.getTimeDuration = exports.getCurrentTimestamp = void 0;
const dayjs_1 = __importDefault(require("dayjs"));
const advancedFormat_1 = __importDefault(require("dayjs/plugin/advancedFormat"));
const customParseFormat_1 = __importDefault(require("dayjs/plugin/customParseFormat"));
const duration_1 = __importDefault(require("dayjs/plugin/duration"));
const minMax_1 = __importDefault(require("dayjs/plugin/minMax"));
const relativeTime_1 = __importDefault(require("dayjs/plugin/relativeTime"));
const updateLocale_1 = __importDefault(require("dayjs/plugin/updateLocale"));
const utc_1 = __importDefault(require("dayjs/plugin/utc"));
dayjs_1.default.extend(utc_1.default);
dayjs_1.default.extend(duration_1.default);
dayjs_1.default.extend(relativeTime_1.default);
dayjs_1.default.extend(customParseFormat_1.default);
dayjs_1.default.extend(minMax_1.default);
dayjs_1.default.extend(advancedFormat_1.default);
dayjs_1.default.extend(updateLocale_1.default);
// https://day.js.org/docs/en/customization/relative-time
dayjs_1.default.updateLocale('en', {
    relativeTime: {
        future: 'in %s',
        past: '%s ago',
        s: 'seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    },
});
const getCurrentTimestamp = () => Math.floor(Date.now() / 1000);
exports.getCurrentTimestamp = getCurrentTimestamp;
const getTimeDuration = (pastTime) => {
    const diff = (0, dayjs_1.default)().utc().diff(pastTime);
    return dayjs_1.default.duration(diff).humanize();
};
exports.getTimeDuration = getTimeDuration;
const getAbbrevatedFormat = (time) => time
    .split(' ')
    .map((str) => {
    if (str.includes('month')) {
        return 'mo';
    }
    if (str.includes('day')) {
        return 'd';
    }
    if (str.includes('hour')) {
        return 'hr';
    }
    if (str.includes('minute')) {
        return 'm';
    }
    if (str.includes('second')) {
        return 's';
    }
    if (str.includes('a')) {
        return '1';
    }
    if (str.includes('a') || str.includes('few')) {
        return null;
    }
    return str;
})
    .filter(Boolean)
    .join('');
exports.getAbbrevatedFormat = getAbbrevatedFormat;
//# sourceMappingURL=time.js.map