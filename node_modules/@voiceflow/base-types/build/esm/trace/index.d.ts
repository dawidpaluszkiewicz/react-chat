import { TraceFrame as CardV2Trace } from "../node/cardV2";
import { TraceFrame as CarouselTrace } from "../node/carousel";
import { TraceFrame as ExitTrace } from "../node/exit";
import { TraceFrame as FlowTrace } from "../node/flow";
import { TraceFrame as ChoiceTrace } from "../node/interaction";
import { TraceFrame as SpeakTrace } from "../node/speak";
import { TraceFrame as StreamTrace } from "../node/stream";
import { TraceFrame as TextTrace } from "../node/text";
import { BaseTraceFrame, TraceType } from "../node/utils";
import { TraceFrame as VisualTrace } from "../node/visual";
import { IntentRequest } from "../request";
import { Log as RuntimeLog } from "../runtimeLogs";
import { AnyRecord } from '@voiceflow/common';
export { TraceFrame as CardV2 } from "../node/cardV2";
export { TraceFrame as Carousel } from "../node/carousel";
export { TraceFrame as End } from "../node/exit";
export { TraceFrame as Flow } from "../node/flow";
export { TraceFrame as Choice } from "../node/interaction";
export { TraceFrame as Speak } from "../node/speak";
export { TraceFrame as Stream } from "../node/stream";
export { TraceFrame as Text } from "../node/text";
export { BaseTraceFrame, TraceType } from "../node/utils/trace";
export { TraceFrame as Visual } from "../node/visual";
/** @deprecated */
export { TraceFrame as CarouselTrace } from "../node/carousel";
/** @deprecated */
export { TraceFrame as ExitTrace } from "../node/exit";
/** @deprecated */
export { TraceFrame as FlowTrace } from "../node/flow";
/** @deprecated */
export { TraceFrame as ChoiceTrace } from "../node/interaction";
/** @deprecated */
export { TraceFrame as SpeakTrace } from "../node/speak";
/** @deprecated */
export { TraceFrame as StreamTrace } from "../node/stream";
/** @deprecated */
export { TraceFrame as TextTrace } from "../node/text";
/** @deprecated */
export { TraceFrame as VisualTrace } from "../node/visual";
export interface DebugTracePayload {
    type?: string;
    message: string;
}
export interface DebugTrace extends BaseTraceFrame<DebugTracePayload> {
    type: TraceType.DEBUG;
}
export interface PathTracePayload {
    path: string;
}
export interface PathTrace extends BaseTraceFrame<PathTracePayload> {
    type: TraceType.PATH;
}
export interface GoToTracePayload {
    request: IntentRequest;
}
export interface GoToTrace extends BaseTraceFrame<GoToTracePayload> {
    type: TraceType.GOTO;
}
export interface BlockTracePayload {
    blockID: string;
}
export interface BlockTrace extends BaseTraceFrame<BlockTracePayload> {
    type: TraceType.BLOCK;
}
export interface NoReplyTracePayload {
    timeout: number;
}
export interface NoReplyTrace extends BaseTraceFrame<NoReplyTracePayload> {
    type: TraceType.NO_REPLY;
}
export interface EntityFillingTracePayload {
    entityToFill: string;
    intent: IntentRequest;
}
export interface EntityFillingTrace extends BaseTraceFrame<EntityFillingTracePayload> {
    type: TraceType.ENTITY_FILLING;
}
export declare type LogTracePayload = RuntimeLog;
export interface LogTrace extends BaseTraceFrame<LogTracePayload> {
    type: TraceType.LOG;
}
export interface ChannelActionTracePayload {
    name: string;
    payload: AnyRecord;
}
export interface ChannelActionTrace extends BaseTraceFrame<ChannelActionTracePayload> {
    type: TraceType.CHANNEL_ACTION;
}
export declare type AnyTrace = LogTrace | ExitTrace | TextTrace | GoToTrace | FlowTrace | SpeakTrace | BlockTrace | DebugTrace | ChoiceTrace | StreamTrace | VisualTrace | NoReplyTrace | CarouselTrace | CardV2Trace | EntityFillingTrace | ChannelActionTrace;
