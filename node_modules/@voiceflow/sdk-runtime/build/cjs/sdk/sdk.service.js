"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoiceflowRuntime = void 0;
const runtime_1 = require("../runtime");
const trace_service_js_1 = require("../trace/trace.service.js");
class VoiceflowRuntime {
    constructor(options) {
        this.trace = new trace_service_js_1.TraceService(options);
        if ((0, runtime_1.isAuthRuntimeOptions)(options)) {
            this.runtime = new runtime_1.AuthRuntimeService(options);
        }
        else if ((0, runtime_1.isPublicRuntimeOptions)(options)) {
            this.runtime = new runtime_1.PublicRuntimeService(options);
        }
        else {
            throw new Error('invalid runtime options');
        }
    }
    registerStep(step) {
        this.trace.registerTrace(step);
        return this;
    }
    async interact(context, request) {
        const response = await this.runtime.interact(request);
        return this.trace.processTrace(context, response);
    }
    async feedback(request) {
        return this.runtime.feedback(request);
    }
    async getPublishing(...options) {
        return this.runtime.getPublishing(...options);
    }
    async createTranscript(...options) {
        return this.runtime.createTranscript(...options);
    }
}
exports.VoiceflowRuntime = VoiceflowRuntime;
