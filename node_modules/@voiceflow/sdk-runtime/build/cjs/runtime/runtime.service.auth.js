"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthRuntimeService = void 0;
const runtime_service_1 = require("../runtime/runtime.service");
class AuthRuntimeService extends runtime_service_1.RuntimeService {
    constructor(options) {
        super(options);
        this.authorization = options.verify.authorization;
    }
    async interact(request) {
        const { action, config, sessionID, versionID } = request;
        return this.send(`state/user/${sessionID}/interact`, {
            method: 'POST',
            body: { action, config },
            headers: {
                authorization: this.authorization,
                sessionID,
                ...(versionID ? { versionID } : {}),
            },
            params: new URLSearchParams({ verbose: 'true' }),
        });
    }
    async feedback() {
        return Promise.reject(new Error('not implemented'));
    }
    // TODO: expose authenticated publishing
    getPublishing() {
        return Promise.reject(new Error('not implemented'));
    }
    // TODO: expose authenticated createTranscript
    createTranscript() {
        return Promise.reject(new Error('not implemented'));
    }
}
exports.AuthRuntimeService = AuthRuntimeService;
