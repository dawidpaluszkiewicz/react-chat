"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicRuntimeService = void 0;
const runtime_service_1 = require("../runtime/runtime.service");
class PublicRuntimeService extends runtime_service_1.RuntimeService {
    constructor(options) {
        super(options);
        this.projectID = options.verify.projectID;
    }
    async interact(request) {
        const { action, config, sessionID, versionID } = request;
        return this.send(`public/${this.projectID}/state/user/${sessionID}/interact`, {
            method: 'POST',
            body: { action, config },
            headers: {
                sessionID,
                ...(versionID && { versionID }),
            },
        });
    }
    async feedback(request) {
        const { versionID, sessionID, ...body } = request;
        await this.send(`feedback/${this.projectID}/user/${sessionID}`, {
            method: 'POST',
            body,
            headers: {
                sessionID,
                ...(versionID && { versionID }),
            },
        });
    }
    async getPublishing(request) {
        const { versionID } = request;
        return this.send(`public/${this.projectID}/publishing`, {
            method: 'GET',
            headers: {
                ...(versionID ? { versionID } : {}),
            },
        });
    }
    async createTranscript(sessionID, metadata) {
        return this.send(`public/${this.projectID}/transcripts`, {
            method: 'POST',
            body: { ...metadata, sessionID },
        });
    }
}
exports.PublicRuntimeService = PublicRuntimeService;
