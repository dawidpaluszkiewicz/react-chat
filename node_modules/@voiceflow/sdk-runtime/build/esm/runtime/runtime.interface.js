import { BaseRequest, Trace } from '@voiceflow/base-types';
export { Trace } from '@voiceflow/base-types';
export const isAuthRuntimeOptions = (options) => {
    return !!options?.verify?.authorization;
};
export const isPublicRuntimeOptions = (options) => {
    return typeof options?.verify?.projectID === 'string';
};
export const isRuntimeAction = (value) => typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, 'type');
export const ActionType = BaseRequest.RequestType;
export const createIntentAction = (payload) => ({
    type: ActionType.INTENT,
    payload,
});
export const isRuntimeTraceType = (value) => typeof value === 'string' && Object.values(Trace.TraceType).includes(value);
export const isRuntimeTrace = (value) => typeof value === 'object' &&
    Object.prototype.hasOwnProperty.call(value, 'type') &&
    isRuntimeTraceType(value.type);
