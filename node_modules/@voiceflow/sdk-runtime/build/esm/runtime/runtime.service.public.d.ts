import type { BaseModels } from '@voiceflow/base-types';
import type { PublicVerify, RuntimeFeedbackRequest, RuntimeInteractRequest, RuntimeInteractResponse, RuntimeOptions } from '../runtime/runtime.interface.js';
import { RuntimeService } from '../runtime/runtime.service.js';
export declare class PublicRuntimeService extends RuntimeService {
    private readonly projectID;
    constructor(options: RuntimeOptions<PublicVerify>);
    interact(request: RuntimeInteractRequest): Promise<Pick<RuntimeInteractResponse, 'trace'>>;
    feedback(request: RuntimeFeedbackRequest): Promise<void>;
    getPublishing(request: {
        versionID?: string;
    }): Promise<Record<string, unknown>>;
    createTranscript(sessionID: string, metadata: {
        os?: string;
        device?: string;
        browser?: string;
    }): Promise<BaseModels.Transcript.Model>;
}
//# sourceMappingURL=runtime.service.public.d.ts.map