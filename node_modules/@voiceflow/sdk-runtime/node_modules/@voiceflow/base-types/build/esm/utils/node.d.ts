import * as BaseModels from "../models";
import * as Node from "../node";
export declare const createNodeTypeguard: <R extends BaseModels.BaseNode>(values: R["type"] | R["type"][]) => (value: BaseModels.BaseNode) => value is R;
export declare const isV1: (node: BaseModels.BaseNode) => node is Node._v1.Node<Node.Utils.BaseEvent>;
export declare const isIf: (value: BaseModels.BaseNode) => value is Node.If.Node;
export declare const isUrl: (value: BaseModels.BaseNode) => value is Node.Url.Node;
export declare const isSet: (value: BaseModels.BaseNode) => value is Node.Set.Node;
export declare const isText: (value: BaseModels.BaseNode) => value is Node.Text.Node;
export declare const isGoTo: (value: BaseModels.BaseNode) => value is Node.GoTo.Node;
export declare const isCard: (value: BaseModels.BaseNode) => value is Node.Card.Node;
export declare const isIfV2: (value: BaseModels.BaseNode) => value is Node.IfV2.Node;
export declare const isFlow: (value: BaseModels.BaseNode) => value is Node.Flow.Node;
export declare const isCode: (value: BaseModels.BaseNode) => value is Node.Code.Node;
export declare const isExit: (value: BaseModels.BaseNode) => value is Node.Exit.Node;
export declare const isSpeak: (value: BaseModels.BaseNode) => value is Node.Speak.Node;
export declare const isStart: (value: BaseModels.BaseNode) => value is Node.Start.Node;
export declare const isSetV2: (value: BaseModels.BaseNode) => value is Node.SetV2.Node;
export declare const isVisual: (value: BaseModels.BaseNode) => value is Node.Visual.Node;
export declare const isStream: (value: BaseModels.BaseNode) => value is Node.Stream.Node;
export declare const isRandom: (value: BaseModels.BaseNode) => value is Node.Random.Node;
export declare const isCardV2: (value: BaseModels.BaseNode) => value is Node.CardV2.Node;
export declare const isCapture: (value: BaseModels.BaseNode) => value is Node.Capture.Node;
export declare const isGeneral: (value: BaseModels.BaseNode) => value is Node.General.Node<Node.General.AnyTrace>;
export declare const isCarousel: (value: BaseModels.BaseNode) => value is Node.Carousel.Node;
export declare const isRandomV2: (value: BaseModels.BaseNode) => value is Node.RandomV2.Node;
export declare const isGoToNode: (value: BaseModels.BaseNode) => value is Node.GoToNode.Node;
export declare const isDirective: (value: BaseModels.BaseNode) => value is Node.Directive.Node;
export declare const isCaptureV2: (value: BaseModels.BaseNode) => value is Node.CaptureV2.Node;
export declare const isInteraction: (value: BaseModels.BaseNode) => value is Node.Interaction.Node<Node.Utils.BaseEvent>;
export declare const isIntegrations: (value: BaseModels.BaseNode) => value is Node.Integration.Node;
