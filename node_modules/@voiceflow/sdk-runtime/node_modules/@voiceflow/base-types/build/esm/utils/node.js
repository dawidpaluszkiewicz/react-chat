import * as Node from "../node";
import { Utils } from '@voiceflow/common';
export const createNodeTypeguard = Utils.typeguard.createTypedTypeguardCreator();
export const isV1 = (node) => Utils.object.hasProperty(node, '_v') && node._v === 1;
export const isIf = createNodeTypeguard(Node.NodeType.IF);
export const isUrl = createNodeTypeguard(Node.NodeType.URL);
export const isSet = createNodeTypeguard(Node.NodeType.SET);
export const isText = createNodeTypeguard(Node.NodeType.TEXT);
export const isGoTo = createNodeTypeguard(Node.NodeType.GOTO);
export const isCard = createNodeTypeguard(Node.NodeType.CARD);
export const isIfV2 = createNodeTypeguard(Node.NodeType.IF_V2);
export const isFlow = createNodeTypeguard(Node.NodeType.FLOW);
export const isCode = createNodeTypeguard(Node.NodeType.CODE);
export const isExit = createNodeTypeguard(Node.NodeType.EXIT);
export const isSpeak = createNodeTypeguard(Node.NodeType.SPEAK);
export const isStart = createNodeTypeguard(Node.NodeType.START);
export const isSetV2 = createNodeTypeguard(Node.NodeType.SET_V2);
export const isVisual = createNodeTypeguard(Node.NodeType.VISUAL);
export const isStream = createNodeTypeguard(Node.NodeType.STREAM);
export const isRandom = createNodeTypeguard(Node.NodeType.RANDOM);
export const isCardV2 = createNodeTypeguard(Node.NodeType.CARD_V2);
export const isCapture = createNodeTypeguard(Node.NodeType.CAPTURE);
export const isGeneral = createNodeTypeguard(Node.NodeType.GENERAL);
export const isCarousel = createNodeTypeguard(Node.NodeType.CAROUSEL);
export const isRandomV2 = createNodeTypeguard(Node.NodeType.RANDOM_V2);
export const isGoToNode = createNodeTypeguard(Node.NodeType.GOTO_NODE);
export const isDirective = createNodeTypeguard(Node.NodeType.DIRECTIVE);
export const isCaptureV2 = createNodeTypeguard(Node.NodeType.CAPTURE_V2);
export const isInteraction = createNodeTypeguard(Node.NodeType.INTERACTION);
export const isIntegrations = createNodeTypeguard(Node.NodeType.INTEGRATIONS);
//# sourceMappingURL=node.js.map