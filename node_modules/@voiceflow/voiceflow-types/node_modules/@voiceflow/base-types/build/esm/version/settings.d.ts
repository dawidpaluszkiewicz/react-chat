import { CarouselLayout } from "../node/carousel";
import { AIModelParams } from "../utils/ai";
import { Nullable } from '@voiceflow/common';
import { Utils } from '../node';
export declare enum RepeatType {
    OFF = "OFF",
    ALL = "ALL",
    DIALOG = "DIALOG"
}
export declare enum SessionType {
    RESUME = "resume",
    RESTART = "restart"
}
export interface RestartSession {
    type: SessionType.RESTART;
}
export interface ResumeSession<Prompt = unknown> {
    type: SessionType.RESUME;
    resume: Nullable<Prompt>;
    follow: Nullable<Prompt>;
}
export declare type Session<Prompt = unknown> = RestartSession | ResumeSession<Prompt>;
export declare enum GlobalNoMatchType {
    STATIC = "static",
    GENERATIVE = "generative"
}
export interface Settings<Prompt = unknown> {
    error: Nullable<Prompt>;
    repeat: RepeatType;
    session: Session<Prompt>;
    defaultCanvasNodeVisibility: Nullable<Utils.CanvasNodeVisibility>;
    defaultCarouselLayout?: Nullable<CarouselLayout>;
    globalNoReply?: {
        prompt?: Nullable<Prompt> | undefined;
        delay?: number | undefined;
    };
    globalNoMatch?: {
        type: GlobalNoMatchType.STATIC;
        prompt: Nullable<Prompt> | undefined;
    } | {
        type: GlobalNoMatchType.GENERATIVE;
        prompt: AIModelParams;
    };
}
export declare const defaultSettings: <Prompt>({ error, repeat, session, defaultCanvasNodeVisibility, defaultCarouselLayout, globalNoMatch, globalNoReply, }?: Partial<Settings<Prompt>>) => Settings<Prompt>;
