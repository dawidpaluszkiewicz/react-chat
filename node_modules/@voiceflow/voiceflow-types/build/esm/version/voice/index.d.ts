import { DeepPartialByKey } from '@voiceflow/base-types';
import { VoiceVersion } from '@voiceflow/voice-types';
import { Voice } from "../../constants";
import { BasePrototype } from '../base';
import { SharedVoiceSettings, VoiceSettings } from './settings';
export * from './settings';
export interface SharedVoicePlatformData extends VoiceVersion.PlatformData<Voice> {
    settings: SharedVoiceSettings;
}
export interface VoicePlatformData extends SharedVoicePlatformData {
    settings: VoiceSettings;
}
export interface VoiceVersion extends VoiceVersion.Version<Voice, BasePrototype> {
    platformData: VoicePlatformData;
}
export declare const defaultSharedVoicePlatformData: ({ settings, ...data }: DeepPartialByKey<SharedVoicePlatformData, 'settings'>) => SharedVoicePlatformData;
export declare const defaultVoicePlatformData: ({ settings, ...data }: DeepPartialByKey<VoicePlatformData, 'settings'>) => VoicePlatformData;
