var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var __toBinary = /* @__PURE__ */ (() => {
  var table = new Uint8Array(128);
  for (var i = 0; i < 64; i++)
    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;
  return (base64) => {
    var n = base64.length, bytes = new Uint8Array((n - (base64[n - 1] == "=") - (base64[n - 2] == "=")) * 3 / 4 | 0);
    for (var i2 = 0, j = 0; i2 < n; ) {
      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];
      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];
      bytes[j++] = c0 << 2 | c1 >> 4;
      bytes[j++] = c1 << 4 | c2 >> 2;
      bytes[j++] = c2 << 6 | c3;
    }
    return bytes;
  };
})();

// wasm/mod.wasm
var require_mod = __commonJS({
  "wasm/mod.wasm"(exports, module2) {
    module2.exports = __toBinary("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");
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  MurmurHash3: () => murmur_hash3_exports
});

// src/murmur-hash3/index.ts
var murmur_hash3_exports = {};
__export(murmur_hash3_exports, {
  hash32: () => hash32
});

// src/constants.ts
var UINT32_MAX_VALUE = 4294967295;

// src/util.ts
var import_buffer = require("buffer/index.js");
var BufferPonyfill = typeof Buffer === "undefined" ? import_buffer.Buffer : Buffer;
function stringToBuffer(string) {
  return BufferPonyfill.from(string);
}

// src/wasm.ts
var import_loader = require("@assemblyscript/loader");
var import_mod = __toESM(require_mod());
var wasmModule = (0, import_loader.instantiateSync)(import_mod.default);
var wasm = wasmModule.exports;

// src/murmur-hash3/hash-32.ts
function hash32(key, seed) {
  if (seed < 0 || seed > UINT32_MAX_VALUE) {
    throw new RangeError(`The value of "seed" is out of range. It must be >= 0 and <= ${UINT32_MAX_VALUE}.`);
  }
  const keyBuffer = typeof key === "string" ? stringToBuffer(key) : key;
  const keyPointer = wasm.__pin(wasm.__newArrayBuffer(keyBuffer));
  const hash = wasm.hash32(keyPointer, seed);
  const result = BufferPonyfill.allocUnsafe(4);
  result.writeUInt32BE(hash >>> 0);
  wasm.__unpin(keyPointer);
  return result;
}
module.exports = __toCommonJS(src_exports);
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2luZGV4LnRzIiwgIi4uL3NyYy9tdXJtdXItaGFzaDMvaW5kZXgudHMiLCAiLi4vc3JjL2NvbnN0YW50cy50cyIsICIuLi9zcmMvdXRpbC50cyIsICIuLi9zcmMvd2FzbS50cyIsICIuLi9zcmMvbXVybXVyLWhhc2gzL2hhc2gtMzIudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCAqIGFzIE11cm11ckhhc2gzIGZyb20gJy4vbXVybXVyLWhhc2gzL2luZGV4JztcblxuZXhwb3J0IHtNdXJtdXJIYXNoM307XG4iLCAiZXhwb3J0ICogZnJvbSAnLi9oYXNoLTMyJztcbiIsICJleHBvcnQgY29uc3QgVUlOVDMyX01BWF9WQUxVRSA9IDB4ZmZfZmZfZmZfZmY7XG4iLCAiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vcHJlZmVyLW5vZGUtcHJvdG9jb2xcbmltcG9ydCB7QnVmZmVyIGFzIEJ1ZmZlclNoaW19IGZyb20gJ2J1ZmZlci9pbmRleC5qcyc7XG5cbmV4cG9ydCBjb25zdCBCdWZmZXJQb255ZmlsbCA9IHR5cGVvZiBCdWZmZXIgPT09ICd1bmRlZmluZWQnID8gKEJ1ZmZlclNoaW0gYXMgdW5rbm93biBhcyBCdWZmZXJDb25zdHJ1Y3RvcikgOiBCdWZmZXI7XG5cbi8qKlxuICogQ29udmVydCBhIGBzdHJpbmdgIHRvIGEgYEJ1ZmZlcmAuXG4gKlxuICogQHBhcmFtIHN0cmluZyAtIFRoZSBzdHJpbmcgdG8gY29udmVydCB0byBhIGBCdWZmZXJgXG4gKlxuICogQHJldHVybnMgQSBgQnVmZmVyYCBpbnN0YW5jZSBjb250YWluaW5nIHRoZSBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ1RvQnVmZmVyKHN0cmluZzogc3RyaW5nKTogQnVmZmVyIHtcblx0cmV0dXJuIEJ1ZmZlclBvbnlmaWxsLmZyb20oc3RyaW5nKTtcbn1cbiIsICJpbXBvcnQge2luc3RhbnRpYXRlU3luY30gZnJvbSAnQGFzc2VtYmx5c2NyaXB0L2xvYWRlcic7XG5pbXBvcnQgd2FzbUJ1ZmZlciBmcm9tICcuLi93YXNtL21vZC53YXNtJztcbmltcG9ydCB0eXBlICogYXMgV2FzbSBmcm9tICcuL3R5cGVzL3dhc20uanMnO1xuXG5jb25zdCB3YXNtTW9kdWxlID0gaW5zdGFudGlhdGVTeW5jPFdhc20uRXhwb3J0cz4od2FzbUJ1ZmZlcik7XG5cbmV4cG9ydCBjb25zdCB3YXNtID0gd2FzbU1vZHVsZS5leHBvcnRzO1xuIiwgIi8qIGVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuaW1wb3J0IHtVSU5UMzJfTUFYX1ZBTFVFfSBmcm9tICcuLi9jb25zdGFudHMnO1xuaW1wb3J0IHtCdWZmZXJQb255ZmlsbCwgc3RyaW5nVG9CdWZmZXJ9IGZyb20gJy4uL3V0aWwnO1xuaW1wb3J0IHt3YXNtfSBmcm9tICcuLi93YXNtJztcblxuLyoqXG4gKiBIYXNoZXMgYSBwcm92aWRlZCBrZXkgd2l0aCBhIHNlZWQgdXNpbmcgdGhlIE11cm11ckhhc2gzIGFsZ29yaXRobSB5aWVsZGluZyBhIDMyLWJpdCBoYXNoLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqc1xuICogaW1wb3J0IHsgTXVybXVySGFzaDMgfSBmcm9tICdtdXJtdXJoYXNoLXdhc20nO1xuICpcbiAqIGNvbnN0IGtleSA9IEJ1ZmZlci5mcm9tKCdoZWxsbycpO1xuICogY29uc3Qgc2VlZCA9IDA7XG4gKlxuICogY29uc3QgaGFzaCA9IE11cm11ckhhc2gzLmhhc2gzMihrZXksIHNlZWQpO1xuICpcbiAqIGNvbnN0IGhleCA9IGhhc2gudG9TdHJpbmcoJ2hleCcpO1xuICogLy8gJzU4NDRkYTQ2J1xuICogY29uc3QgdmFsdWUgPSBoYXNoLnJlYWRVSW50MzJCRSgpO1xuICogLy8gMTQ4MDkwNzMzNFxuICogYGBgXG4gKlxuICogQHBhcmFtIGtleSAtIFRoZSBrZXkgdG8gaGFzaFxuICogQHBhcmFtIHNlZWQgLSBUaGUgc2VlZCB0byB1c2UgdG8gaGFzaFxuICpcbiAqIEByZXR1cm5zIFRoZSBoYXNoIGluIGEgYEJ1ZmZlcmAgY29udGFpbmluZyBhIHNpbmdsZSB1bnNpZ25lZCAzMi1iaXQgaW50ZWdlciBpbiBiaWctZW5kaWFuIGZvcm1hdCAoVUludDMyQkUpXG4gKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzaDMyKGtleTogQXJyYXlCdWZmZXJMaWtlLCBzZWVkOiBudW1iZXIpOiBCdWZmZXI7XG4vKipcbiAqIEhhc2hlcyBhIHByb3ZpZGVkIGtleSB3aXRoIGEgc2VlZCB1c2luZyB0aGUgTXVybXVySGFzaDMgYWxnb3JpdGhtIHlpZWxkaW5nIGEgMzItYml0IGhhc2guXG4gKiBUaGUga2V5IHdpbGwgYmUgY29udmVydGVkIHRvIGEgYEJ1ZmZlcmAgdXNpbmcgYEJ1ZmZlci5mcm9tKClgLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqc1xuICogaW1wb3J0IHsgTXVybXVySGFzaDMgfSBmcm9tICdtdXJtdXJoYXNoLXdhc20nO1xuICpcbiAqIGNvbnN0IGtleSA9ICdoZWxsbyc7XG4gKiBjb25zdCBzZWVkID0gMDtcbiAqXG4gKiBjb25zdCBoYXNoID0gTXVybXVySGFzaDMuaGFzaDMyKGtleSwgc2VlZCk7XG4gKlxuICogY29uc3QgaGV4ID0gaGFzaC50b1N0cmluZygnaGV4Jyk7XG4gKiAvLyAnNTg0NGRhNDYnXG4gKiBjb25zdCB2YWx1ZSA9IGhhc2gucmVhZFVJbnQzMkJFKCk7XG4gKiAvLyAxNDgwOTA3MzM0XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ga2V5IC0gVGhlIGtleSB0byBoYXNoXG4gKiBAcGFyYW0gc2VlZCAtIFRoZSBzZWVkIHRvIHVzZSB0byBoYXNoXG4gKlxuICogQHJldHVybnMgVGhlIGhhc2ggaW4gYSBgQnVmZmVyYCBjb250YWluaW5nIGEgc2luZ2xlIHVuc2lnbmVkIDMyLWJpdCBpbnRlZ2VyIGluIGJpZy1lbmRpYW4gZm9ybWF0IChVSW50MzJCRSlcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvdW5pZmllZC1zaWduYXR1cmVzXG5leHBvcnQgZnVuY3Rpb24gaGFzaDMyKGtleTogc3RyaW5nLCBzZWVkOiBudW1iZXIpOiBCdWZmZXI7XG5leHBvcnQgZnVuY3Rpb24gaGFzaDMyKGtleTogc3RyaW5nIHwgQXJyYXlCdWZmZXJMaWtlLCBzZWVkOiBudW1iZXIpOiBCdWZmZXIge1xuXHRpZiAoc2VlZCA8IDAgfHwgc2VlZCA+IFVJTlQzMl9NQVhfVkFMVUUpIHtcblx0XHR0aHJvdyBuZXcgUmFuZ2VFcnJvcihgVGhlIHZhbHVlIG9mIFwic2VlZFwiIGlzIG91dCBvZiByYW5nZS4gSXQgbXVzdCBiZSA+PSAwIGFuZCA8PSAke1VJTlQzMl9NQVhfVkFMVUV9LmApO1xuXHR9XG5cblx0Y29uc3Qga2V5QnVmZmVyOiBBcnJheUJ1ZmZlckxpa2UgPSB0eXBlb2Yga2V5ID09PSAnc3RyaW5nJyA/IHN0cmluZ1RvQnVmZmVyKGtleSkgOiBrZXk7XG5cblx0Y29uc3Qga2V5UG9pbnRlciA9IHdhc20uX19waW4od2FzbS5fX25ld0FycmF5QnVmZmVyKGtleUJ1ZmZlcikpO1xuXG5cdGNvbnN0IGhhc2ggPSB3YXNtLmhhc2gzMihrZXlQb2ludGVyLCBzZWVkKTtcblxuXHRjb25zdCByZXN1bHQgPSBCdWZmZXJQb255ZmlsbC5hbGxvY1Vuc2FmZSg0KTtcblxuXHRyZXN1bHQud3JpdGVVSW50MzJCRShoYXNoID4+PiAwKTtcblxuXHR3YXNtLl9fdW5waW4oa2V5UG9pbnRlcik7XG5cblx0cmV0dXJuIHJlc3VsdDtcbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7O0FDQUE7QUFBQTtBQUFBO0FBQUE7OztBQ0FPLElBQU0sbUJBQW1COzs7QUNDaEMsb0JBQW1DO0FBRTVCLElBQU0saUJBQWlCLE9BQU8sV0FBVyxjQUFlLHVCQUE4QztBQVN0Ryx3QkFBd0IsUUFBd0I7QUFDdEQsU0FBTyxlQUFlLEtBQUs7QUFBQTs7O0FDYjVCLG9CQUE4QjtBQUM5QixpQkFBdUI7QUFHdkIsSUFBTSxhQUFhLG1DQUE4QjtBQUUxQyxJQUFNLE9BQU8sV0FBVzs7O0FDc0R4QixnQkFBZ0IsS0FBK0IsTUFBc0I7QUFDM0UsTUFBSSxPQUFPLEtBQUssT0FBTyxrQkFBa0I7QUFDeEMsVUFBTSxJQUFJLFdBQVcsK0RBQStEO0FBQUE7QUFHckYsUUFBTSxZQUE2QixPQUFPLFFBQVEsV0FBVyxlQUFlLE9BQU87QUFFbkYsUUFBTSxhQUFhLEtBQUssTUFBTSxLQUFLLGlCQUFpQjtBQUVwRCxRQUFNLE9BQU8sS0FBSyxPQUFPLFlBQVk7QUFFckMsUUFBTSxTQUFTLGVBQWUsWUFBWTtBQUUxQyxTQUFPLGNBQWMsU0FBUztBQUU5QixPQUFLLFFBQVE7QUFFYixTQUFPO0FBQUE7IiwKICAibmFtZXMiOiBbXQp9Cg==
